{"version":3,"sources":["webpack:///./src/front/pages/Widgets/Widgets.scss","webpack:///./src/front/components/WidgetForm/WidgetForm.js","webpack:///./src/front/components/WidgetForm/widgetValidation.js","webpack:///./src/front/hoc/withEnterAnimation/index.js","webpack:///./src/front/hoc/withEnterAnimation/styled/AnimatedDiv.js","webpack:///./src/front/hoc/withEnterAnimation/withEnterAnimation.js","webpack:///./src/front/pages/Widgets/Widgets.js","webpack:///./src/front/pages/Widgets/Widgets.scss?5119","webpack:///./src/front/pages/Widgets/index.js","webpack:///./src/front/utils/validation.js"],"names":["WidgetForm","props","editStop","fields","id","color","sprocketCount","owner","formKey","handleSubmit","invalid","pristine","save","submitting","saveError","values","styles","require","saving","idCol","value","colorCol","colors","map","valueColor","error","touched","sprocketsCol","ownerCol","buttonCol","then","result","Promise","reject","propTypes","PropTypes","object","isRequired","func","bool","string","widgetValidation","createValidator","oneOf","maxLength","fadeIn","AnimatedDiv","styled","div","viewEnter","withEnterAnimation","BaseComponent","WithEnterAnimation","passProps","displayName","wrapDisplayName","Widgets","renderWidgets","handleEdit","editStart","String","widget","widgets","editing","loading","load","readyStatus","linkList","fetchWidgetsIfNeeded","refreshClassName","refreshBtn","length","console","log","mapStateToProps","state","mapDispatchToProps","bindActionCreators","dispatch","compose","connect","isEmpty","undefined","join","rules","data","rule","filter","email","test","required","minLength","min","max","integer","Number","isInteger","enumeration","indexOf","match","field","errors","Object","keys","forEach","key","concat"],"mappings":"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","file":"6.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".widgets .refreshBtn {\\n  margin-left: 20px; }\\n\\n.widgets .idCol {\\n  width: 5%; }\\n\\n.widgets .colorCol {\\n  width: 20%; }\\n\\n.widgets .sprocketsCol {\\n  width: 20%;\\n  text-align: right; }\\n  .widgets .sprocketsCol input {\\n    text-align: right; }\\n\\n.widgets .ownerCol {\\n  width: 30%; }\\n\\n.widgets .buttonCol {\\n  width: 25%; }\\n  .widgets .buttonCol .btn {\\n    margin: 0 5px; }\\n\\n.widgets tr.saving {\\n  opacity: 0.8; }\\n  .widgets tr.saving .btn[disabled] {\\n    opacity: 1; }\\n\", \"\"]);\n\n// exports\n","import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { reduxForm } from 'redux-form';\nimport widgetValidation, { colors } from './widgetValidation';\nimport * as widgetActions from 'redux/modules/widgets';\n\n/*\n@connect(\n  state => ({\n    saveError: state.widgets.saveError\n  }),\n  dispatch => bindActionCreators(widgetActions, dispatch)\n)\n@reduxForm({\n  form: 'widget',\n  fields: ['id', 'color', 'sprocketCount', 'owner'],\n  validate: widgetValidation\n}) */\nexport default class WidgetForm extends Component {\n  static propTypes = {\n    fields: PropTypes.object.isRequired,\n    editStop: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    invalid: PropTypes.bool.isRequired,\n    pristine: PropTypes.bool.isRequired,\n    save: PropTypes.func.isRequired,\n    submitting: PropTypes.bool.isRequired,\n    saveError: PropTypes.object,\n    formKey: PropTypes.string.isRequired,\n    values: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const {\n      editStop,\n      fields: { id, color, sprocketCount, owner },\n      formKey,\n      handleSubmit,\n      invalid,\n      pristine,\n      save,\n      submitting,\n      saveError: { [formKey]: saveError },\n      values,\n    } = this.props;\n    const styles = require('pages/Widgets/Widgets.scss');\n    return (\n      <tr className={submitting ? styles.saving : ''}>\n        <td className={styles.idCol}>{id.value}</td>\n        <td className={styles.colorCol}>\n          <select name=\"color\" className=\"form-control\" {...color}>\n            {colors.map(valueColor => (\n              <option value={valueColor} key={valueColor}>\n                {valueColor}\n              </option>\n            ))}\n          </select>\n          {color.error &&\n            color.touched && <div className=\"text-danger\">{color.error}</div>}\n        </td>\n        <td className={styles.sprocketsCol}>\n          <input type=\"text\" className=\"form-control\" {...sprocketCount} />\n          {sprocketCount.error &&\n            sprocketCount.touched && (\n              <div className=\"text-danger\">{sprocketCount.error}</div>\n            )}\n        </td>\n        <td className={styles.ownerCol}>\n          <input type=\"text\" className=\"form-control\" {...owner} />\n          {owner.error &&\n            owner.touched && <div className=\"text-danger\">{owner.error}</div>}\n        </td>\n        <td className={styles.buttonCol}>\n          <button\n            className=\"btn btn-default\"\n            onClick={() => editStop(formKey)}\n            disabled={submitting}\n          >\n            <i className=\"fa fa-ban\" /> Cancel\n          </button>\n          <button\n            className=\"btn btn-success\"\n            onClick={handleSubmit(() =>\n              save(values).then(result => {\n                if (result && typeof result.error === 'object') {\n                  return Promise.reject(result.error);\n                }\n              }),\n            )}\n            disabled={pristine || invalid || submitting}\n          >\n            <i\n              className={'fa ' + (submitting ? 'fa-cog fa-spin' : 'fa-cloud')}\n            />{' '}\n            Save\n          </button>\n          {saveError && <div className=\"text-danger\">{saveError}</div>}\n        </td>\n      </tr>\n    );\n  }\n}\n","import {createValidator, required, maxLength, integer, oneOf} from 'utils/validation';\n\nexport const colors = ['Blue', 'Fuchsia', 'Green', 'Orange', 'Red', 'Taupe'];\n\nconst widgetValidation = createValidator({\n  color: [required, oneOf(colors)],\n  sprocketCount: [required, integer],\n  owner: [required, maxLength(30)]\n});\nexport default widgetValidation;\n","// @flow\n\nimport withEnterAnimation from './withEnterAnimation';\n\nexport default withEnterAnimation;\n","// @flow\n\n// @region imports\nimport styled, { keyframes, css } from 'styled-components';\n// #endregion\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n    transform: none;\n  }\n`;\n\nconst AnimatedDiv = styled.div`\n  ${({ viewEnter }) =>\n    viewEnter &&\n    css`\n      opacity: 0;\n      animation-name: ${fadeIn};\n      animation-timing-function: ease-in;\n      animation-duration: 0.7s;\n      animation-delay: 0s;\n      animation-fill-mode: both;\n    `};\n`;\n\nexport default AnimatedDiv;\n","// @flow\n\n// #region imports\nimport React, { Component } from 'react';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport AnimatedDiv from './styled/AnimatedDiv';\n// #endregion\n\n// #region flow types\ntype Props = any;\n\ntype State = any;\n// #endregion\n\nfunction withEnterAnimation() {\n  return (BaseComponent: any) => {\n    class WithEnterAnimation extends Component<Props, State> {\n      render() {\n        const { ...passProps } = this.props;\n\n        return (\n          <AnimatedDiv viewEnter={true}>\n            <BaseComponent {...passProps} />\n          </AnimatedDiv>\n        );\n      }\n    }\n\n    /* eslint-disable no-process-env */\n    if (process.env.NODE_ENV !== 'production') {\n      // HOC would obfuscate component name, this trick is helpful for dev (we don't care in production)\n      WithEnterAnimation.displayName = wrapDisplayName(\n        BaseComponent,\n        'withEnterAnimation',\n      );\n    }\n    /* eslint-enable no-process-env */\n\n    return WithEnterAnimation;\n  };\n}\n\nexport default withEnterAnimation;\n","// @flow\nimport React, { Component } from 'react';\nimport {\n  type Match,\n  type Location,\n  type RouterHistory,\n} from 'react-router-dom';\n\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport * as widgetActions from 'redux/modules/widgets';\nimport { isLoaded, load as loadWidgets } from 'redux/modules/widgets';\nimport { initializeWithKey } from 'redux-form';\nimport WidgetForm from '../../components/WidgetForm/WidgetForm';\n// import { asyncConnect } from 'redux-async-connect';\n\n/* asyncConnect([{\n  deferred: true,\n  promise: ({store: {dispatch, getState}}) => {\n    if (!isLoaded(getState())) {\n      return dispatch(loadWidgets());\n    }\n  }\n}])\nconnect(\n  state => ({\n    widgets: state.widgets.data,\n    editing: state.widgets.editing,\n    error: state.widgets.error,\n    loading: state.widgets.loading\n  }),\n  {...widgetActions, initializeWithKey })*/\ntype Props = {\n  // react-router 4:\n  match: Match,\n  location: Location,\n  history: RouterHistory,\n\n  widgets: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool,\n  initializeWithKey: PropTypes.func.isRequired,\n  editing: PropTypes.object.isRequired,\n  load: PropTypes.func.isRequired,\n  editStart: PropTypes.func.isRequired,\n  fetchWidgetsIfNeeded: () => void,\n  ...any,\n};\n\nexport default class Widgets extends Component<Props> {\n  componentDidMount() {\n    const { fetchWidgetsIfNeeded } = this.props;\n    fetchWidgetsIfNeeded();\n  }\n\n  renderWidgets = () => {\n    const handleEdit = widget => {\n      const { editStart } = this.props; // eslint-disable-line no-shadow\n      return () => editStart(String(widget.id));\n    };\n    const { widgets, error, editing, loading, load } = this.props;\n\n    if (\n      !widgets.readyStatus ||\n      widgets.readyStatus === 'WIDGETS_INVALID' ||\n      widgets.readyStatus === 'WIDGETS_REQUESTING'\n    ) {\n      return <p> Loading... </p>;\n    }\n    if (widgets.readyStatus === 'WIDGETS_FAILURE') {\n      return <p> Oops, Failed to load widgets list! </p>;\n    }\n\n    /* var linkList = widgets.list.data.workOrders.map(wo => {\n      return (\n        <li key={wo.id}>\n          <Link to={`${match.url}/${wo.id}`}>{wo.name}</Link>\n        </li>\n      );\n    });*/\n    var linkList = <li>list here</li>;\n    if (widgets) {\n      const styles = require('./Widgets.scss');\n      return (\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th className={styles.idCol}>ID</th>\n              <th className={styles.colorCol}>Color</th>\n              <th className={styles.sprocketsCol}>Sprockets</th>\n              <th className={styles.ownerCol}>Owner</th>\n              <th className={styles.buttonCol} />\n            </tr>\n          </thead>\n          <tbody>\n            {widgets.map(\n              widget =>\n                editing[widget.id] ? (\n                  <WidgetForm\n                    formKey={String(widget.id)}\n                    key={String(widget.id)}\n                    initialValues={widget}\n                  />\n                ) : (\n                  <tr key={widget.id}>\n                    <td className={styles.idCol}>{widget.id}</td>\n                    <td className={styles.colorCol}>{widget.color}</td>\n                    <td className={styles.sprocketsCol}>\n                      {widget.sprocketCount}\n                    </td>\n                    <td className={styles.ownerCol}>{widget.owner}</td>\n                    <td className={styles.buttonCol}>\n                      <button\n                        className=\"btn btn-primary\"\n                        onClick={handleEdit(widget)}\n                      >\n                        <i className=\"fa fa-pencil\" /> Edit\n                      </button>\n                    </td>\n                  </tr>\n                ),\n            )}\n          </tbody>\n        </table>\n      );\n    }\n    return (\n      <div>\n        <h3>widgets list</h3>\n        <ul> {linkList} </ul>\n      </div>\n    ); // <WidgetsList list={widgets.list} />;\n  };\n\n  render() {\n    const { widgets, error, editing, loading, load } = this.props;\n    let refreshClassName = 'fa fa-refresh';\n    if (loading) {\n      refreshClassName += ' fa-spin';\n    }\n    const styles = require('./Widgets.scss');\n    return (\n      <div className={styles.widgets + ' container'}>\n        <h1>\n          Widgets\n          <button\n            className={styles.refreshBtn + ' btn btn-success'}\n            onClick={load}\n          >\n            <i className={refreshClassName} /> Reload Widgets\n          </button>\n        </h1>\n        <Helmet title=\"Widgets\" />\n        <p>\n          If you hit refresh on your browser, the data loading will take place\n          on the server before the page is returned. If you navigated here from\n          another page, the data was fetched from the client after the route\n          transition. This uses the decorator method <code>@asyncConnect</code>{' '}\n          with the <code>deferred: true</code> flag. To block a route transition\n          until some data is loaded, remove the <code>deffered: true</code>{' '}\n          flag. To always render before loading data, even on the server, use{' '}\n          <code>componentDidMount</code>.\n        </p>\n        <p>\n          This widgets are stored in your session, so feel free to edit it and\n          refresh.\n        </p>\n        {error && (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            <span\n              className=\"glyphicon glyphicon-exclamation-sign\"\n              aria-hidden=\"true\"\n            />{' '}\n            {error}\n          </div>\n        )}\n        {widgets && widgets.length && this.renderWidgets(widgets)}\n      </div>\n    );\n  }\n}\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./Widgets.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./Widgets.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./Widgets.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// @flow\n\n// #region imports\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport compose from 'recompose/compose';\nimport Widgets from './Widgets';\nimport * as widgetActions from 'redux/modules/widgets';\n\nimport withEnterAnimation from '../../hoc/withEnterAnimation';\n// #endregion\nconsole.log('widgetActions:', widgetActions);\n// #region redux map state and dispatch to props\nconst mapStateToProps = state => {\n  return { widgets: state.widgets };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      ...widgetActions,\n    },\n    dispatch,\n  );\n};\n// #endregion\n\nexport default compose(\n  withEnterAnimation(/* no option yet */),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(Widgets);\n","const isEmpty = value => value === undefined || value === null || value === '';\nconst join = (rules) => (value, data) => rules.map(rule => rule(value, data)).filter(error => !!error)[0 /* first error */ ];\n\nexport function email(value) {\n  // Let's not start a debate on email regex. This is just for an example app!\n  if (!isEmpty(value) && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    return 'Invalid email address';\n  }\n}\n\nexport function required(value) {\n  if (isEmpty(value)) {\n    return 'Required';\n  }\n}\n\nexport function minLength(min) {\n  return value => {\n    if (!isEmpty(value) && value.length < min) {\n      return `Must be at least ${min} characters`;\n    }\n  };\n}\n\nexport function maxLength(max) {\n  return value => {\n    if (!isEmpty(value) && value.length > max) {\n      return `Must be no more than ${max} characters`;\n    }\n  };\n}\n\nexport function integer(value) {\n  if (!Number.isInteger(Number(value))) {\n    return 'Must be an integer';\n  }\n}\n\nexport function oneOf(enumeration) {\n  return value => {\n    if (!~enumeration.indexOf(value)) {\n      return `Must be one of: ${enumeration.join(', ')}`;\n    }\n  };\n}\n\nexport function match(field) {\n  return (value, data) => {\n    if (data) {\n      if (value !== data[field]) {\n        return 'Do not match';\n      }\n    }\n  };\n}\n\nexport function createValidator(rules) {\n  return (data = {}) => {\n    const errors = {};\n    Object.keys(rules).forEach((key) => {\n      const rule = join([].concat(rules[key])); // concat enables both functions and arrays of functions\n      const error = rule(data[key], data);\n      if (error) {\n        errors[key] = error;\n      }\n    });\n    return errors;\n  };\n}\n"],"sourceRoot":""}